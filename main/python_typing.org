:PROPERTIES:
:ID:       3f19e1ef-e5c4-45f1-822f-8d4d834acdbd
:mtime:    20250318092039 20250106221721 20241204135030 20231222190513 20231128102157
:ctime:    20231128102157
:END:
#+TITLE: Python Typing
#+FILETAGS: :python:typing:mypy:

* MyPy

MyPy is a static type checker.

** Configuration

Should ideally be done via ~pyproject.toml~ and example follows

#+begin_src toml
[tool.mypy]
files = [
  "isoslam",
  "tests"
]
python_version = "3.10"
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
warn_unused_ignores = true
exclude = [
  '^all_introns_counts_and_info\.py$',
  '^pipeline_slam_3UIs\.py$',
]

[[tool.mypy.overrides]]
module = [ "numpy.*", "loguru", "ruamel.yaml", "pysam"]
ignore_missing_imports = true

#+end_src

* Ignoring Typing

** Globally

#+begin_src
# type: ignore
#+end_src

If using shebang

#+begin_src
#!/usr/bin/env python
#-*- coding: utf-8 -*-
# mypy: ignore-errors
#+end_src

** Per Line

#+begin_src
some = line(with, error)  # type:ignore[arg-type]
#+end_src


* RightTyper

Adding typehints can be tedious, particularly if you have legacy code base that needs annotating. Cue [[https://github.com/RightTyper/RightTyper][RightTyper]] a "/
fast and efficient type assistant for Python, including tensor shape inference/" that does the hard work for you. It
integrates with [[id:3cca0dfd-0c82-4685-b9ed-6314f7c8b78f][Pytest]] so can be run against your code base when you run your test suite and can even be used to
automatically annotate your code.

* Links

+ [[https://www.mypy-lang.org/][mypy - Optional Static Typing for Python]] ([[https://mypy.readthedocs.io/en/stable/index.html][documentation]])
+ [[https://notes.crmarsh.com/using-mypy-in-production-at-spring][Using Mypy in production at Spring]] - nice article with useful recommendations.
+ [[https://python-type-challenges.zeabur.app/][Python Type Challenges - Learn & Master Type Hints]]
+ [[https://adamj.eu/tech/2021/05/25/python-type-hints-specific-type-ignore/][Mypy configuration]]
