:PROPERTIES:
:ID:       c7db0a19-b880-4fd6-862c-bc3c17605bf9
:mtime:    20250126172113 20250124204356 20241222212315 20241221144125
:ctime:    20241221144125
:END:
#+TITLE: NixOS - Configuration
#+FILETAGS: :nixos:linux:config:

There is a /lot/ to configuring everything, here I break things down a bit, there is some overlap with both [[id:c9eb0e6d-b152-487c-90d4-3786fcfd0889][Flakes]] and
[[id:01336e19-dc8a-41ca-8534-6a790b39b1b6][HomeManager]] since some aspects of configuration are delegated to these systems. It helps to understand the Nix language
and a good starting point is the [[https://nix.dev/tutorials/nix-language][Nix language basics tutorial]].

* Fingerprint

The laptop I've installed NixOS on (a ThinkPad T490 i7-8865U @ 1.90Ghz with 32GB RAM and 1TB SSH) has a fingerprint
scanner as well as a touch screen. The [[https://wiki.nixos.org/wiki/Fingerprint_scanner][fingerprint]] scanner can be used to unlock the laptop. To enable add the following
~service~

#+begin_src
services = {
  ...
  fprintd = {
    enable = true;
  };
};
#+end_src

You will have to at the very least ~nixos-rebuild test~ to load the new configuration and you can then used
~fprintd-enroll~ to register the finger print.

* Emacs

I use [[id:754f25a5-3429-4504-8a17-4efea1568eba][Emacs]] for most things and NixOS is no different. Typically I run the Emacs daemon and connect a client. The
[[https://nixos.wiki/wiki/Emacs][Emacs - NixOS Wiki]] has information on how to configure this (I installed globally as a ~systemPackages~).

#+begin_src
{
  services = {
    emacs = {
      enable = true;
      package = pkg.emacs;
    };
  };
}
#+end_src

* Shell

More a Nix Language feature really but you can add simple functions to a script to colour output but found it in a [[https://gist.github.com/maikelthedev/21e834074228e6433563ecaf6df2bcd0][gist
on customising shell]] which had the following in ~shell.nix~.

 #+begin_src
{ pkgs ? import <nixpkgs> {} }:
pkgs.mkShell {
  shellHook = ''
    ...
    # Color-coded functions for output
    red() { echo -e "\e[31m🚨 $1\e[0m"; }
    green() { echo -e "\e[32m✅ $1\e[0m"; }
    yellow() { echo -e "\e[33m⚙️  $1\e[0m"; }
    blue() { echo -e "\e[34m🔷 $1\e[0m"; }
    # Step headers
    step_header() {
      echo -e "\e[35m\n======> $1\e[0m\n";
    }
    # Use the red() / green() / yellow() / blue() / stepheader() functions as required.
    some_function() {
      step_header "Running Some Function"
      yellow "Doing something"
      echo "Something"
      green "Doing more"
      echo "More stuff!"
    }_
  ''; # end shellHook
} # end pkgs.mkShell
 #+end_src


** ZSH / Oh-my-zsh

I use [[id:a1b78518-31e8-4fd3-a36f-d8f152832138][ZSH]] with the excellent ~oh-my-zsh~ plugin/theme. This is done via [[id:01336e19-dc8a-41ca-8534-6a790b39b1b6][HomeManager]] and a full list of configuration
options can be found [[https://nix-community.github.io/home-manager/options.xhtml#opt-programs.zsh.enable][starting here]].

#+begin_src
{
  programs = {
    ...
    zsh = {
      enable = true;
      enableCompletion = true;
      autosuggestion.enable = true;
      syntaxHighlighting.enable = true;
      defaultKeymap = "emacs";
      history = {
        save = 1000000;
        ignoreAllDups = true;
        ignoreSpace = true;
      };
      shellAliases = {
        shutup = "sudo -c shutdown -h now";
        update = "sudo nixos-rebuild switch";
      };
      oh-my-zsh = {
        enable = true;
        plugins = [
          "git"
          "pass"
          "pip"
          "rsync"
          "common-aliases"
        ];
        theme = "";
      };
    }; # end zsh

  }; # end programs
};
#+end_src

* Links

** Wiki

+ [[https://nixos.wiki/wiki/Emacs][Emacs]]
+ [[https://nixos.wiki/wiki/Zsh][Zsh]]
