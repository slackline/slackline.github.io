:PROPERTIES:
:ID:       5c6a5268-9f73-46d1-810f-6aa6158101a5
:mtime:    20240507151058 20240130205353
:ctime:    20240130205353
:END:
#+TITLE: Git Miscellany
#+FILETAGS: :git:


There are tons of options to Git, here I document some that I've come across and found useful.

* Managing Multiple Repositories

Over time the number of repositories you have and use regularly will likely grow. A useful tool for managing these is
[[https://myrepos.branchable.com/][myrepos]] which helps manage multiple repositories (the command it provisions is ~mr~ for **m**y **r**epos).

In a `git` version controlled directory run ~mr register~ which sets up ~\~/.mrconfig~ you can then update them all (in
parallel!) with ~mr -j6 update~. Commands run on individual repositories can be customised.


* --allow-empty

Sometimes you might want to force your CI/CD pipeline to run again, most of the time you can do this through the Actions
(GitHub) or Pipeline (GitLab) pages, but something like [[https://pre-commit.ci][pre-commit.ci]] can't be triggered from GitHub Actions. Instead
you can make an [[https://www.thread.house/2020/01/git-commit-allow-empty/][empty commit]] with the ~--allow-empty~ flag which would trigger the pipeline to run again.


* --smudge

Smudging can allow you to keep secrets stored locally but not shared on ~origin~. Some articles are...

+ [[https://git-scm.com/book/en/v2/Customizing-Git-Git-Attributes][Git - Git Attributes]]
+ [[https://developers.redhat.com/articles/2022/02/02/protect-secrets-git-cleansmudge-filter#][Secure data in Git with the clean/smudge filter | Red Hat Developer]]

* Signing and Authentication

+ [[https://guix.gnu.org/en/blog/2024/authenticate-your-git-checkouts/][Authenticate your Git checkouts! — 2024 — Blog — GNU Guix]]
