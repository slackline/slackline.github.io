:PROPERTIES:
:ID:       251b3ae4-4a5c-4c44-909a-dcbc0aef4b45
:mtime:    20230312225146 20230208071742 20230105145232 20230103103309 20221228151331 20230103103309 20230103103308
:ctime:    20221228151331 20230103103308
:END:
#+TITLE: Quarto
#+DATE: <2022-05-24 Tue 22:07>
#+FILETAGS: :reproducibility:literate programming:

[[https://quarto.org/][Quarto]] is a [[id:ab2f5dfb-e355-4dbb-8ca0-12845b82e38a][literate programming]] engine based on [[https://pandoc.org/][Pandoc]] that supports multiple scientific languages ([[id:de9a18a7-b4ef-4a9f-ac99-68f3c76488e5][R]], [[id:5b5d1562-ecb4-4199-b530-e7993723e112][Python]], [[id:67f03851-d5bf-46ea-a7f5-14dfbaa7c61c][Julia]]
and [[https://observablehq.com/@observablehq/observables-not-javascript][Observable]]). Its syntax has a lot in common with other literate programming languages such as [[id:ca27ae38-f187-4a3c-803f-b36ee2cfa374][RMarkdown]] and [[id:6e75f9df-df3d-4402-b5ad-ed98d0834e08][Org
Babel]] in so much as code chunks have parameters which handle how they are processed and then displayed in the resulting
document.

* Blogging
:PROPERTIES:
:ID:       25c4a623-fc4c-4902-8f28-f54949e26299
:mtime:    20230208071742 20230103103313 20221228151331 20230103103308
:ctime:    20221228151331 20230103103308
:END:

Blogging is simple with Quarto. I've written my own which you can view at [[https://ns-rse.github.io/][ns-rse.github.io]] ([[https://github.com/ns-rse/ns-rse.github.io][repo]]). The ~index.qmd~
should only include the [[id:fac7a695-9bdf-4a79-9ec3-9945e9a0cba4][YAML]] header as the content is automatically generated from the posts.

** About

The ~about.qmd~ is an important file as it tells people about you and allows easy links to be added to your profile on
other sites.

#+begin_src yaml
---
title: "About"
image: img/profile.jpg
about:
  template: jolla
  links:
    - icon: twitter
      text: Twitter
      href: https://twitter.com/nshephardRSE
      rel: me
    - icon: github
      text: Github
      href: https://github.com/ns-rse
      rel: me
    - icon: mastodon
      text: Mastodon
      href: https://fosstodon.org/@nshephard
      rel: me

---

#+end_src
** Posts

New posts are created under the ~posts/<slug>~ directory (where ~slug~ will be the URL of the page). A typical header I
will use looks like the following.

#+begin_src yaml
---
title: "<title>"
author: "nshephard"
date: "<date>"
categories: [code, analysis, linting, git, github, gitlab]
image: <url to one of my flickr pics>
from: markdown+emoji
toc: true
toc-depth: 3
toc-location: right
execute:
  code_fold: true
  code_link: true
  code_tools: true
  fig-cap-location: top
  tbl-cap-location: top
  warning: false
---
#+end_src

* Presentations
:PROPERTIES:
:ID:       29a2113e-484c-42f3-b200-76a569066c3b
:mtime:    20221228151331 20230103103311
:ctime:    20221228151331
:END:

** RevealJS
:PROPERTIES:
:ID:       0cfcd756-03fa-4150-a685-4a31d8197c54
:END:

Incredibly useful system and its highly flexible. My typical header looks like

#+begin_src yaml
---
title: "<title>"
author: "Neil Shephard"
email: "n.shephard@sheffield.ac.uk"
from: markdown+emoji
format:
  revealjs:
    theme: sky
    chalkboard: true
    slide-number: true
    show-slide-number: speaker
    # embed-resources: true
    # standalone: true
footer: "[**ns-rse.github.io/**](https://ns-rse.github.io/)"
---
#+end_src

*** Extensions

There are a fair few extensions out there but a really useful one for slides (and in general) that cuts down on the
amount of images you need to include is the [[https://github.com/jmbuhr/quarto-qrcode][QRcode Extension]] which automatically embeds a QR code for a given URL via
shortcodes.

#+begin_src bash
  quarto install extensions jmbhur/quarto-qrcode
#+end_src

Usage is simple {{< qrcode https://ns-rse.github.io/ >}}.

*** Hosting Pages

If you write your slides as a file called ~index.qmd~ and add it to the top level of a [[id:3c905838-8de4-4bb6-9171-98c1332456be][Git]] repository that is hosted on
[[id:52b4db29-ba21-4a8a-9b83-6e9a8dc02f41][GitHub]] then you can use a GitHub Action to build this as a web-page on pushes to ~main~. I did this with my slides for a
talk I gave at University of Leeds Research Computing on ~pre-commit~ ([[https://ns-rse.github.io/pre-commit/#/title-slide][slides]]; [[https://github.com/ns-rse/pre-commit][repo]]) and the host, Alex Coleman liked
the idea and setup a useful [[https://github.com/Sparrow0hawk/quarto-revealjs-template][quarto-revealjs-template]] which includes the required workflow.

* Websites
:PROPERTIES:
:ID:       2a6ded3a-68ba-4f05-ac0c-f1fa29fdcec4
:END:

* Books
:PROPERTIES:
:ID:       0ce8dca8-d0c7-40e9-a629-01e03a8d7a44
:mtime:    20230103103308 20221228151331
:ctime:    20221228151331
:END:

* Code
:PROPERTIES:
:ID:       db0e802e-d990-40c0-9c29-6bd067f4f546
:mtime:    20221228151331
:ctime:    20221228151331
:END:

There are a number of options you can apply to code blocks. The ~code_fold: true~ options will hide code blocks in the
rendered HTML but with a little arrow to expand them. ~code_tools: true~ will put links to the documentation of
functions used in a code block. ~code_link: true~

#+begin_src yaml
  execute:
    code_fold: true
    code_link: true
    code_tools: true
#+end_src

I found these global options didn't work under blogs, although

* Previewing
:PROPERTIES:
:ID:       8e0f1277-6058-4135-8483-20b1ace75161
:mtime:    20230105145232
:ctime:    20230105145232
:END:

You can preview documents easily, from within [[id:754f25a5-3429-4504-8a17-4efea1568eba][Emacs]] bind the following.

#+begin_src emacs-lisp
  (use-package quarto-mode
	     :mode (("\\.Rmd" . poly-quarto-mode))
	     :bind (("C-c q" . quarto-preview)))
#+end_src

 You can set [[https://quarto.org/docs/reference/projects/options.html#preview][options for ~preview~ ]] in the YAML header, most usefully is fixing the ~host~ and/or ~port~ so you don't
  get a new browser tab each time you preview.

#+begin_src yaml
  ---
  project:
    ...
    preview:
      port: 9999
      host: 127.0.0.1
      browser: true
      watch-inputs: true
      navigate: true
#+end_src

* Extensions

There are a bunch of [[https://quarto.org/docs/extensions/][Quarto Extensions]] that add additional functionality. Some I've found useful are described below.

** [[https://github.com/jmbuhr/quarto-qrcode][quarto-qrcode]]

A simple method for embedding QR-codes for URLs.

** [[https://github.com/coatless/quarto-webr][quarto-webr]]

Leverages [[https://docs.r-wasm.org/webr/latest/][webR]] to embed interactive R sessions within HTML rendered pages which makes them interactive.

* Links
+ [[https://t.co/FDlvjq4qrc][quarto.org]]
+ [[https://quarto.org/docs/extensions/][Quarto Extensions]]
+ [[https://hbiostat.org/rflow/][R Workflow]] : Reproducible Biomedical Research using Quarto
+ [[https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/][A Quarto tip a day]]

** GitHub

+ [[https://github.com/quarto-dev/quarto-actions/][quarto-dev/quarto-actions]]
