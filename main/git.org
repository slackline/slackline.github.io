:PROPERTIES:
:ID:       3c905838-8de4-4bb6-9171-98c1332456be
:mtime
:ctime:    20230222225246
:END:
TITLE: Git
#+DATE: <2022-05-24 Tue 22:07>
#+FILETAGS: :git:programming:documentation:version control:

[[https://git-scm.com][Git]] is the defacto [[id:668debfd-9cf7-4577-9ae8-b63fcf044bb8][Version Control Systems]] these days. Whether you write code in [[id:5b5d1562-ecb4-4199-b530-e7993723e112][Python]], [[id:de9a18a7-b4ef-4a9f-ac99-68f3c76488e5][R]],
scripts for [[id:ab2f5dfb-e355-4dbb-8ca0-12845b82e38a][Literate Programming]], Go, [[id:3469c33e-7c61-46c7-b01e-655695f3b93c][Rust]], C++, Java, [[id:9c6257dc-cbef-4291-8369-b3dc6c173cf2][Bash]] or want to keep critical files such as your dotfiles,
~/etc/~ (using [[id:48249b0d-eeba-484a-8f00-808a14169692][git_etckeeper]]), or GPG encrypted passwords backed up you should consider using Git (or some other version
control system, but Git is the most popular for now).

It can be daunting facing yet another new area to tackle as you are only just getting to grips with a programming
language having to learn a bunch of unfamiliar concepts that seem of little value, I know I've been there, but it really
does pay dividends to invest time learning how to use Git. You will benefit from having your code backed up off-site,
the ability to work across multiple computers on the same code base, collaborate with others on code development, know
what changes have been made at which point in the history of the code development and in turn benefit from being able to
revert changes that are not required.

If you use [[id:754f25a5-3429-4504-8a17-4efea1568eba][Emacs]] then you should definitely be using [[id:220d7ba9-d30e-4149-a25b-03796e098b0d][Magit]] and if you use Git then you would benefit from using
[[id:c76767c4-2a49-42f8-a323-a6d6105e0bce][Pre-commit]] too, it saves you considerable time and effort in the long run.

#+ATTR_HTML: :width 300px
#+CAPTION: In Case of Fire
[[./img/git_in_case_of_fire.png]]


Topics are alphabetical...

+ [[id:55d950fe-e9ce-477d-9ab1-6498be95b910][Aliases]]
+ [[id:cbdb0c03-0eeb-45f0-a4c7-91131519120e][Bisecting]]
+ [[id:661f45c0-cec7-4b57-b2b1-7da8f9d8d0e6][Branches]]
+ [[id:669648c5-07ce-472e-aaac-cdba9c0b4d05][Concepts]]
+ [[id:2013cd50-f008-422a-ade1-b97d6bfc3a2a][Data Version Control]]
+ [[id:28ffcc43-9dff-4de8-a211-277c5346a642][Forges]]
+ [[id:98fb864e-8e55-47cb-bfe8-c002d9e3d435][Hooks]]
+ [[id:809de327-3039-4499-945b-b48974e5efe7][History]] (aka Log)
+ [[id:d42f29bd-1a5b-4e30-a2e6-03469a024133][IDE Integration]]
+ [[id:3d6bf689-54bd-4551-b367-019e1cb67e73][Merge Conflicts]]
+ [[id:5c6a5268-9f73-46d1-810f-6aa6158101a5][Miscellaneous]]
+ [[id:57ba7f41-cf41-493c-bbf4-9d1e05a0602d][Rebase]]
+ [[id:90a51969-bb25-4a44-8a71-ffcd43b9dfe6][Setup]]
+ [[id:62d4406f-68ce-418b-90aa-25a8978b0248][Stashing]]
+ [[id:8c97a5ea-6a80-4569-a7fa-6223200a0ea6][Teaching]]
+ [[id:6f30d2b6-b1eb-413a-b181-de434d35fc69][Usage]]

* Links
+ [[https://git-scm.com][Git]]
+ [[https:magit.vc][Magit]]
+ [[https://www.gitkraken.com/][GitKraken]]

** Tools

+ [[http://gitignore.io/][gitignore.io]]
+ [[https://initialcommit.com/blog/git-sim][git-sim: Visually simulate Git operations in your own repos]]
+ [[https://github.com/wfxr/forgit][forgit]] eases use of Git at the command line
+ [[https://github.com/o2sh/onefetch][onefetch]] - command line utility for fast overview of a repository.
+ [[https://jonas.github.io/tig/][Tig · Text-mode interface for Git]]

** Learning Resources

+ [[http://blog.anvard.org/conversational-git/][Conversational Git]]
+ [[https://git-scm.com/book/en/v2][Pro Git]]
+ [[https://gitbetter.substack.com/archive?sort=new][Git Better]]
+ [[https://ohshitgit.com/][Oh Shit, Git!?!]]
+ [[https://ohmygit.org/][Oh My Git!]] - a game for learning Git.
+ [[https://onlywei.github.io/explain-git-with-d3/#clean][Explain Git with D3]]
+ [[https://learngitbranching.js.org/][Learn Git Branching]]
+ [[https://srse-git-github-zero2hero.netlify.app/][Git & GitHub through GitKraken Client - From Zero to Hero]]
+ [[https://initialcommit.com/blog/git-sim][git-sim : visually simulate Git operations in your own repos]]

+ [[https://maryrosecook.com/blog/post/git-from-the-inside-out][Git from the inside out]] - excellent walk through of Git internals.

** HowTos

*** Commit

+ [[https://cbea.ms/git-commit/][How to Write a Git Commit Message]]
+ [[http://www.pauline-vos.nl/atomic-commits/][Atomic Commits]] ([[https://www.pauline-vos.nl/git-legit-cheatsheet/][Git Legit Cheatsheet]])
+ [[https://www.youtube.com/watch?v=_e5oq4JT4_8][Git Legit]] - Good video on how to use Git effectively, making atomic commits, rebasing, avoiding checkpoints to given a
  clean history.
+ [[https://dhwthompson.com/2019/my-favourite-git-commit][My favourite Git commit | dhwthompson.com]]

*** Rebase

+ [[https://www.howtogeek.com/849210/git-rebase/][Git rebase: Everything You Need to Know]]
+ [[https://about.gitlab.com/blog/2022/11/08/rebase-in-real-life/][GitLab Blog | How to use Git rebase in real life]]
+ [[https://about.gitlab.com/blog/2022/10/06/take-advantage-of-git-rebase/][GitLab Blog | Take advantage of Git rebase]]
+ [[https://arialdomartini.github.io/no-reason-to-squash][No Reason to Squash]]
+ [[https://adamj.eu/tech/2023/10/31/git-force-push-safely/][Git: Force push safely with --force-with-lease and --force-if-includes - Adam Johnson]]
+ [[https://megakemp.com/2019/03/20/the-case-for-pull-rebase/][The Case for Pull Rebase]]
+ [[https://jvns.ca/blog/2023/11/06/rebasing-what-can-go-wrong-/][git rebase: what can go wrong?]]

*** Resetting

+ [[https://www.scmgalaxy.com/tutorials/git-commands-tutorials-and-example-git-reset-git-revert/][Git Reset and Revert Tutorial for Beginners]]


*** Signing

+ [[https://migusgroup.com/blog/sign-git-commits-securely-with-vaulted-ssh-keys/][Sign Git Commits Securely With Vaulted SSH Keys]]
+ [[https://gittuf.github.io][gittuf]] provides a security layer for Git using some concepts introduced by [[https://theupdateframework.io/][The Update Framework (TUF)]].

*** Misc

+ [[https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities][Organizing multiple Git identities | Garrit's Notes]]
+ [[https://samwize.com/2022/12/15/tips-to-resolve-merge-conflicts-for-long-lived-branches/][How to resolve merge conflicts for long-lived branches | @samwize]]
+ [[https://csswizardry.com/2017/05/little-things-i-like-to-do-with-git/#praise-people][Little Things I Like to Do with Git – CSS Wizardry – Web Performance Optimisation]]
+ [[https://blog.trunk.io/minimum-viable-git-for-trunk-based-development-81a5da7a77a7][Minimize Git for maximum value]]
+ [[https://myme.no/posts/2023-01-22-git-commands-you-do-not-need.html][Git Commands You Probably Do Not Need]]
+ [[https://www.admin-magazine.com/Archive/2022/72/Versioned-backups-of-local-drives-with-Git][Git Versioned Backups » ADMIN Magazine]]
+ [[https://web.archive.org/web/20190207210108/http://stevelorek.com/how-to-shrink-a-git-repository.html][How to Shrink a Git Repository]]
+ [[https://jvns.ca/blog/2023/09/14/in-a-git-repository--where-do-your-files-live-/][In a git repository, where do your files live?]]
+ [[https://blog.meain.io/2023/what-is-in-dot-git/][What is in that .git directory?]]
+ [[https://alexwlchan.net/a-plumbers-guide-to-git/][A Plumber’s Guide to Git – alexwlchan]]

** Commits

+ [[https://dev.to/hornet_daemon/git-commit-patterns-5dm7][Git Commit Patterns]]
+ [[https://trunk.io/blog/git-commit-messages-are-useless?utm_medium=erik.in&utm_source=mastodon][Git commit messages are useless]]

** Workflows

+ [[https://www.atlassian.com/git/tutorials/comparing-workflows][Atlassian : Comapring Workflows]]
+ [[https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow][Atlassian : Feature Branching]]
+ [[https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow][Atlassian : Gitflow Workflow]]
+ [[https://www.atlassian.com/git/tutorials/comparing-workflows/forking-workflow][Atlassian : Forking Workflow]]
+ [[https://datasift.github.io/gitflow/IntroducingGitFlow.html][Introducing GitFlow]]
+ [[https://memorici.de/posts/better-gitflow/][Better Gitflow]]

** Extensions

+ [[https://tissue.systemreboot.net/][tissue]] an issue tracker and project information management system built on plain text files and Git.
+ [[https://github.com/klaussilveira/gitlist][gitlist]] webUI to Git repositories.
+ [[https://octobox.io/][Octobox]] - manage GitHub Notifications in a WebUI.
+ [[https://github.com/MichaelMure/git-bug][git-bug: Distributed, offline-first bug tracker embedded in git, with bridges]]
+ [[https://github.com/dandavison/delta][delta: A syntax-highlighting pager for git, diff, and grep output]]
+ [[https://myrepos.branchable.com/][myrepos]]
+ [[https://git.holly.sh/git-mirror-sync.git][git-mirror-sync]]

** Related

+ [[https://github.com/dolthub/dolt][Dolt]] - Git for Data
+ [[https://dvc.org/][DVC]] - Data Version Control
+ [[https://mlflow.org/][MLFlow]] - Machline Learning experiment tracking
+ [[https://xethub.com/][XetHub]] - Large file/data storage with version control
+ [[https://kartproject.org/][Kart]] - Distributed version-control for geospatial and tabular data

** Alternatives

+ [[https://forgefed.org/][ForgeFed]]
+ [[https://www.fossil-scm.org/home/doc/trunk/www/index.wiki][Fossil]]
+ [[https://pijul.org/][Pijul]]
+ [[https://gitless.com/][Gitless]]
+ [[https://martinvonz.github.io/jj/][Jujutsu]]
+ [[https://www.monotone.ca/][Monotone]]
+ [[https://forgefriends.org/][forgefriends]]
+ [[https://www.gameoftrees.org/][Game of Trees]]
+ [[https://www.diversion.dev/][Diversion - Cloud-Native Version Control]]
+ [[https://github.com/mitchellwrosen/mit][mitchellwrosen/mit: Git wrapper with a streamlined UX]]

*** Forges

**** Roll Your Own

+ [[https://forgejo.org/][Forgejo – Beyond coding. We forge.]]
+ [[https://sourcehut.org/][sourcehut - the hacker's forge]]
+ [[https://codeberg.org/][Codeberg.org]]

**** Hosted

+ [[https://about.gitly.eu/index.php][Gitly: Private Git Hosting made in EU.]]
** Internals

+ [[https://github.blog/2022-08-29-gits-database-internals-i-packed-object-store/][Git's database internals I : packed object store]]
+ [[https://github.blog/2022-08-30-gits-database-internals-ii-commit-history-queries/][Git’s database internals II: commit history queries]]
+ [[https://github.blog/2022-08-31-gits-database-internals-iii-file-history-queries/][Git’s database internals III: file history queries]]
+ [[https://github.blog/2022-09-01-gits-database-internals-iv-distributed-synchronization/][Git’s database internals IV: distributed synchronization]]
+ [[https://github.blog/2022-09-02-gits-database-internals-v-scalability/][Git’s database internals V: scalability]]
+ [[https://jvns.ca/blog/2023/09/14/in-a-git-repository--where-do-your-files-live-/][In a git repository, where do your files live?]]
+ [[https://www.both.org/?p=3383][Git Concepts in Less than 10 minutes]]

** Misc

+ [[https://ozh.org/contribution/][Custom Github-like contribution graph]]
+ [[https://github.com/git-chglog/git-chglog/][GitHub - git-chglog/git-chglog: CHANGELOG generator]]
+ [[https://github.com/arzzen/git-quick-stats][arzzen/git-quick-stats: ▁▅▆▃▅ Git quick statistics is a simple and efficient way to access various statistics in git
  repository.]]
+ [[https://gitcute.cat/][Cute Commits]]
+ [[https://jvns.ca/blog/2023/10/20/some-miscellaneous-git-facts/][Some miscellaneous git facts]]
+ [[https://jvns.ca/blog/2023/11/01/confusing-git-terminology/][Confusing git terminology]]
+ [[https://mccd.space/posts/git-to-deploy/][Using Git to Deploy NixOS Configurations]]
+ [[https://www.repo-lookout.org/][Repo Lookout – Find publicly exposed source code repositories]]
+ [[https://www.youtube.com/watch?v=S9Do2p4PwtE][re:bass - if Git was music what would it sound like?]]

** Research

+ [[https://journals.sagepub.com/doi/full/10.1177/2515245918754826][Curating Research Assets: A Tutorial on the Git Version Control System - Matti Vuorre, James P. Curley, 2018]]
+ [[https://www.tandfonline.com/doi/full/10.1080/10691898.2020.1848485][Implementing Version Control With Git and GitHub
  as a Learning Objective in Statistics and Data Science Courses]]

** Reviewing

+ [[https://davidism.com/github-pull-request-pitfalls/][GitHub Pull Request Pitfalls]]
+ [[https://code-review.tidyverse.org/][Tidyteam code review principles]] (derived from [[https://google.github.io/eng-practices/review/reviewer/][How to do a Code Review]])
+ [[https://www.pyopensci.org/software-peer-review/][pyOpenSci Software Peer Review Guidebook]]
