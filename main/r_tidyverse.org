:PROPERTIES:
:ID:       b4510762-8409-4e5e-8ee8-c27574977772
:mtime:    20231019135929 20231018135646 20231017142417 20230103103312 20221228151013 20230103103312 20230103103308
:ctime:    20221228151013 20230103103308
:END:
#+TITLE: Tidyverse
#+DATE: [2022-02-13 Sun 19:51]
#+FILETAGS: :r:programming:statistics:

I've seen it argued that at times it can be inefficient but these are mostly pedantic and outdated arguments by those
who do not realise nor understand that shaving a few seconds off of what is often exploratory analyses is insignificant
compared to the time spent by people reading and understanding code (even their own that they wrote a few months or more
ago).

There are a lot of packages out there in the Tidyverse, I only cover a few here and nowhere near in as much depth as the
official documentation for each package. An excellent resource if you wish to learn these tools is the [[https://r4ds.had.co.nz/][R for Data
Science]] book by Hadley Wickham and Garrett Grolemund which is free to read on-line or can be purchased in physical form.

** Pipes
:PROPERTIES:
:ID:       a7d25501-fa12-4f13-bbf0-154d850209eb
:mtime:    20221228151013 20230103103311
:ctime:    20221228151013
:END:
Pipes are the backbone of what makes the Tidyverse so great. When I started learning R I really struggled reading nested
functions but with Pipes the grammar is far more intuitive, reading more like a story.

Compare and contrast base R code...

#+NAME: tidyverse-pipes-base-r
#+CAPTION: Base R code for XXX
#+BEGIN_EXAMPLE R
  library(tidyverse)
#+END_EXAMPLE

#+NAME: tidyverse-pipes-tidyverse
#+CAPTION: Tidyverse R code for XXX
#BEGIN_EXAMPLE R
  library(tidyverse)
#END_EXAMPLE

There are two forms of pipes in R, the original was introduced in [[https://magrittr.tidyverse.org/][Magrittr]] but a native pipe was introduced in base R
v4.1.0. A couple of posts dissecting and comparing the two can be found at [[https://michaelbarrowman.co.uk/post/the-new-base-pipe/][The New Base Pipe]] which is a good exposition
of the speed associated with the two options and [[https://ivelasq.rbind.io/blog/understanding-the-r-pipe/][Understanding the native R pipe |> | %>% dreams]], which is a great
exposition of how the two function "in the wild" and how you might get caught out by problems. I highly recommend
reading both if you are going to use pipes although I'll try and explain each here.
*** Base Pipe
:PROPERTIES:
:ID:       4d45f3f8-61ef-4375-bb27-351c8419635e
:mtime:    20230103103313
:ctime:    20230103103313
:END:
*** Magrittr
:PROPERTIES:
:ID:       bd93d909-8cb4-4c27-8db2-66df0ca9567f
:mtime:    20221228151013
:ctime:    20221228151013
:END:
[[https://magrittr.tidyverse.org/][Magrittr]]
** ggplot2
:PROPERTIES:
:ID:       85c00373-f18d-4c82-939c-f5a1c2770890
:mtime:    20221228151013 20230103103311
:ctime:    20221228151013 20230103103311
:END:

Really useful place for learning features is [[https://ggplot2tor.com/][ggplot2tor+]]

#+NAME: tidyverse-ggplot2
#+CAPTION: ggplot2
#+BEGIN_EXAMPLE R
  library(tidyverse)
  library(ggplot2)
#+END_EXAMPLE

** forcats
:PROPERTIES:
:ID:       e0e5c206-28fb-4c18-b376-4c04a09222ea
:mtime:    20221228151013
:ctime:    20221228151013
:END:

#+NAME: tidyverse-forcats
#+CAPTION: forcats
#+BEGIN_EXAMPLE R
  library(forcats)
#+END_EXAMPLE

** dplyr
:PROPERTIES:
:ID:       78504ff1-a3cd-4f64-a515-ffa2ab6ac36c
:END:

#+NAME: tidyverse-dplyr
#+CAPTION: dplyr
#+BEGIN_EXAMPLE R
  library(dplyr)
#+END_EXAMPLE

*** Summarising data
:PROPERTIES:
:mtime:    20221228151013 20230103103308
:ctime:    20221228151013 20230103103308
:END:

Often you want to produce a table of summary statistics to display. There are many tools out there such as ~summary()~
or ~Hmisc::describe()~ but not all return a data frame/tible that is conduscive to formatting (or accessing the values
of). But ~dplyr::summarise()~ can be leveraged to do this.

#+NAME: tidyverse-dplyr-summarise-single
#+CAPTION: Summarising a single variable (~distance~) by month.
#+begin_src R
  summary_df <- df |>
    dplyr::select(distance) |>  # Exclude the text_description variable from the summary
    dplyr::groupby(month) |>
      dplyr::summarise(n = count(distance),
                       sum = sum(distance),
                       min = min(distance),
                       max = max(distance),
                       mean = mean(distance),
                       sd = sd(distance),
                       median = median(distance))
#+end_src

If you have lots of variables then you can summarise all of them by leveraging the ~across()~ function.


#+NAME: tidyverse-dplyr-summarise-single
#+CAPTION: Summarising a multiple variables (~distance~, ~pace~ and ~time~, excluding ~text_description~).
#+begin_src R
summary_df <- df |>
    dplyr::select(-text_description) |>  # Exclude the text_description variable from the summary
    dplyr::groupby(month) |>
    dplyr::summarise(across(c(distance, pace time),
                            list(n=count,
                                 sum=sum,
                                 min=min,
                                 max=max,
                                 mean=mean
                                 sd=sd,
                                 median=median),
                            .names="{.col}_{.fn}"
                            ))

#+end_src


** tibble
:PROPERTIES:
:ID:       c8693079-9cc9-457a-ab83-16be852963b1
:mtime:    20230103103310 20221228151013
:ctime:    20221228151013
:END:

#+NAME: tidyverse-tibble
#+CAPTION: tibble
#+BEGIN_EXAMPLE R
  library(tidyverse)
#+END_EXAMPLE

** stringr
:PROPERTIES:
:ID:       1eeb28cd-e80f-43b5-ab4b-7b063c1df73d
:mtime:    20221228151013
:ctime:    20221228151013
:END:

[[https://stringr.tidyverse.org/][stringr]] is a package for working with strings in R, its fast as under the hood it uses the ICU library (via the
~stringi~ package). All functions begin with ~str_~ and take a vector of strings as the first argument.

#+NAME: tidyverse-stringr-basic
#+CAPTION: Basic stringr usage.
#+BEGIN_EXAMPLE R
  library(stringr)
#+END_EXAMPLE

If you are using ~stringr~ functions as part of a [[id:78504ff1-a3cd-4f64-a515-ffa2ab6ac36c][dplyr]] pipeline then typically this will be done within a call to
~mutate()~.

#+NAME: tidyverse-stringr-pipeline
#+CAPTION: Using stringr as part of a dplyr pipeline.
#+BEGIN_EXAMPLE R
df  |>
    mutate(length_of_string = str_length(longer_string),
           smaller_string = str_sub(longer_string, 1, 3))
#+END_EXAMPLE


** lubridate
:PROPERTIES:
:ID:       4cde3c5d-8868-4d4e-ba55-172aa93822f1
:mtime:    20230103103308
:ctime:    20230103103308
:END:

[[https://lubridate.tidyverse.org][lubridate]] is a library for working with dates and times.

#+NAME: tidyverse-lubridate
#+CAPTION: lubridate
#+BEGIN_EXAMPLE R
  library(lubridate)
#+END_EXAMPLE

** clock
:PROPERTIES:
:ID:       f4816af1-39be-48ae-a68d-e50b7507bdca
:mtime:    20221228151013
:ctime:    20221228151013
:END:

#+NAME: tidyverse-clock
#+CAPTION: clock
#+BEGIN_EXAMPLE R
  library(clock)
#+END_EXAMPLE


** tidyr
:PROPERTIES:
:ID:       14fb5f71-1230-4350-8d26-85f58120545c
:END:

#+NAME: tidyverse-tidyr
#+CAPTION: tidyr
#+BEGIN_EXAMPLE R
      library(tidyr)
#+END_EXAMPLE

** tidytable
   :PROPERTIES:
   :ID:       00e28ab9-3ae3-481b-99ca-7cc143481437
   :mtime:    20230103103308 20221228151013
   :ctime:    20221228151013
   :END:

Tidytable provides ~tidyverse~ like syntax built on top of the fast ~data.table package~
#+NAME: tidyverse-tidyr
#+CAPTION: tidytable
#+BEGIN_EXAMPLE R
      library(tidyr)
#+END_EXAMPLE

* Tidymodels

[[https://www.tidymodels.org/][Tidymodels]] framework is a collection of packages for modelling and machine learning using [[id:b4510762-8409-4e5e-8ee8-c27574977772][Tidyverse]] principles. Perhaps
the best resource to get started is the book [[https://www.tmwr.org/][Tidy Modeling with R]] by Max Kuhn and Julia Silge.

Notes from the [[id:68355978-9a79-4537-91a0-c264276ecb9b][introduction to Machine Learning with Tidymodels]].

* Links


+ [[https://code-review.tidyverse.org/][Tidyteam code review principles]]
+ [[https://www.tidymodels.org/][Tidymodels]]

** Books

+ [[https://www.tmwr.org/][Tidy Modeling with R]]
