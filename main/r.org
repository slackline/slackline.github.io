:PROPERTIES:
:ID:       de9a18a7-b4ef-4a9f-ac99-68f3c76488e5
:mtime:
:ctime:    20221228150524 20230103103308
:END:
#+TITLE: R
#+DATE: [2022-02-13 Sun 19:51]
#+FILETAGS: :r:programming:statistics:

[[https://www.r-project.org][R]] is a statistical programming language, written and developed initially by statisticians for statisticians. It is based
on the statistical programming S.

* Configuration

By default R looks for ~\~/.Rprofile~ on starting to load options and configuration. There are, as always, caveats to
this. For example the ~\~/.R/Makevars~ file defines options for compiling packages from source and may look like the
following which enables multiple cores to be used by ~gcc~ when building from source.

#+begin_src r
    CFLAGS=-O3 -Wall -pedantic -march=native -mtune=native -pipe
    CXXFLAGS=-O3 -Wall -pedantic -march=native -mtune=native -pipe
    MAKEOPTS=-j$(nproc)
#+end_src

* Maintenance

Its easy to install packages with

#+begin_src r
packages_to_install <- c("tidyverse", "tidymodels", "ggplot2")
> install.packages(packages_to_install)
#+end_src

You can update packages with

#+begin_src r
> update.packages(ask = FALSE)
#+end_src

** Gotchas

Sometimes if installation of a package fails it leaves around a ~00LOCK-<pkg>~ directory which can prevent subsequent
upgrades/installs these can be safely deleted.

The V8 package has an external system dependency on ~libv8~, it gives advice on how to install it on some systems but
not all. Under [[id:44b32b4e-1bef-49eb-b53c-86d9129cb29a][Gentoo]] there doesn't appear to be such a package but there is advice given, which is to set the
environment variable ~DOWNLOAD_STATIC_LIBV8=1~ so you can...

#+begin_src r
> Sys.setenv(DOWNLOAD_STATIC_LIBV8=1)
> update.packages(ask = FALSE)
#+end_src

...and it will download the library that is required.

** Connectivity

Some packages, by their nature (e.g. ~{googlesheets}~) require network connectivity to work, but not all do. You can
check whether a given package needs network connectivity (under GNU/Linux at least) with

#+begin_src: bash
unshare --net --ipc -r R CMD check {package}_0.1.0.tar.gz
#+end_src

* Topics

** Base R

Its the foundation of the whole language but is often over looked in favour of the very popular [[id:b4510762-8409-4e5e-8ee8-c27574977772][Tidyverse]], but there are
a lot of useful functions available in base R and its worth knowing your way around.

+ [[id:cf5da2f1-3c43-4dcc-ba14-682d0ffe25b7][Indexing]]
+ [[id:81a69f9a-207c-41fc-8c2b-913f0743141c][Functions]]
+ [[id:97404282-b80a-41bf-af28-3f5558b06b81][Plotting]]

** Data Manipulations

+ [[id:b4510762-8409-4e5e-8ee8-c27574977772][Tidyverse]]
+ [[id:78838e73-e7de-4a41-a0a9-69861a3f4abe][data.table]]
+ [[id:8a79b410-bc31-458e-824f-11c92eaa4f22][collapse]] 
+ [[id:5b5b5396-0e90-4b2e-bd6a-67e7112207f8][Dates and Times]]

** Modelling

Being a statistical package R is aimed around modelling (despite the many other uses).

+ [[id:8b2f5d7f-53f1-49bd-a6bf-4cd0ddb531fa][Regression]] and its many variations and generalisations.
+ [[id:38feb454-ee1e-440b-939c-c413009c609d][Bayesian Statistics]]
+ [[id:d281425d-a118-4651-96a6-b85da5424b81][Simulations]] R is a great choice for simulating datasets.
+ [[id:e4b22dd5-edf1-4801-9e82-e8786c18de09][Tidymodels]]

** Graphics

Inevitably you'll want to plot your data, there are a few options and I keep notes on these (although highly biased
towards ~ggplot2~)

+ [[id:fc6c0f69-4899-401e-bd6c-a36894c1542e][ggplot2]] an excellent framework for producing graphics. 
+ [[id:82a48af2-bcda-4beb-bf88-71377394f899][Base Graphics]] are highly functional and very useful.

** Tables

+ [[id:9d2317d5-06f3-45de-9cd0-cc4b7307e1db][~flextable~]]
+ [[id:c285d6f1-79d3-4970-8e7f-b6873b565382][~gt~]]
+ [[id:aae6948d-da09-47e8-93f5-85c1a9287c1d][~huxtable~]]
+ [[id:b2af442f-2afd-46ac-8cc3-862a2234dfc1][~kableExtra~]]
    + [[id:c00d4b6b-5c29-4033-a1d6-472159a9c0eb][~tinytable~]]

** IDE

* RStudio

[[https://www.rstudio.com/][RStudio]] is an Integrated Development Environment (IDE) for working with R and more recently other languages. Read more
on [[id:fbe4e0bc-038d-4aeb-aa48-e312f469678e][RStudio]].

** Literate Programming

You'll want to write up your work in some format and R has your back for that with various packages

+ [[id:1db6158d-cb5d-4b73-b926-95e9c09f878b][RMarkdown]] weaves [[id:0c371287-128d-4e46-8128-b2d4f5fc604c][markdown]] with code to facilitate producing reproducible workflows. It can
render to HTML, PDF (via [[id:e1c2cfef-1b43-47a8-a425-94e6ae58d917][latex]]) or produce interactive Shiny applications.
+ [[id:251b3ae4-4a5c-4c44-909a-dcbc0aef4b45][Quarto]] is a new offering from Posit (nee RStudio) that builds on RMarkdown and use Pandoc to produce output.

* Shiny

Shiny provides a framework for creating interactive web-pages from within R. Read more on [[id:fe1f6380-9217-482c-bb5e-91817ae3e8f8][Shiny]].

There are a few ways in which dashboards can be created. The package [[https://rinterface.github.io/bs4Dash/index.html][bs4Dash]] is /A Bootstrap 4 Version of
shinydashboard/ and as v2.0.0 its as simple as switching from ~library(shinydashboard)~ to ~library(bs4Dash)~

You can also [[https://shiny.rstudio.com/blog/shiny-on-hugging-face.html][deploy Shiny on Hugging Face]] via both R and Python Shiny Docker images which gives a simple interface to
Machine Learning interfaces. 

* Parallelisation

It's possible to parallelise conducive code using R, one such package is [[https://www.futureverse.org/][Futureverse]] but there are other options some of
which are summarised in this [[https://bookdown.org/rdpeng/rprogdatascience/parallel-computation.html][Chapter 22 Parallel]] of Roger Peng's [[https://bookdown.org/rdpeng/rprogdatascience/][R Programming for Data Science]].

* Community
:PROPERTIES:
:TITLE: R community
:ID:       e7011db4-16fc-4cde-bb81-4d172cb0db14
:mtime:    20230103103313 20221228150524
:ctime:    20221228150524
:END:

There is a wonderful community around R online. Gone are the days of trepidation about posting on [[https://stat.ethz.ch/mailman/listinfo/r-help][R-help]] only to get
chided for not being clear enough about the problem. These days there is [[https://stackoverflow.com/questions/tagged/r][StackOverflow]] and [[https://stats.stackexchange.com/][CrossValidated]], [[https://www.tidytuesday.com/][Tidy Tuesday]]

* Seeking Help
:PROPERTIES:
:ID:       bbe26fc4-9c87-477b-ab93-eeec4449bc4b
:mtime:    20221228150524 20230103103311
:ctime:    20221228150524 20230103103311
:END:

It can be daunting asking questions about something you don't feel you understand particularly well. Often a seed of
doubt about whether it is even a valid question will be there, the fear of "looking stupid". Anyone who fails to
acknowledge that there are beginners ("newbies") in any area of life is probably not worth worrying too much about, even
if they are held in high-regard within a community. Listen to the people who are willing to help you as you will learn
more from them than an aloof answer.

That said there are things that you can do to help those who's assistance you seek answer your question. This is not a
new topic and there are examples out there such as Eric S. Raymond [[http://www.catb.org/esr/faqs/smart-questions.html][How To Ask Questions The Smart Way]] (on which some of
this advice is based, although that article is heavily orientated towards Computer Science)

+ Start by searching, chances are someone has had the same question before and an answer is out there somewhere. Include
  links to some of the threads you might have found but explain why they didn't answer your question/problem. This
  avoids people responding with "/Use the search/" as it demonstrates you have tried doing so already.
+ Be explicit and give a working example that demonstrates the problem you have.
+ Show your code and the result it gives (in text, not screen shots so that others can copy and paste it and modify it)
  and explain what you were expecting.
+ Take the time to develop a reproducible example (the package [[https://reprex.tidyverse.org/][reprex]] can help here). Often you will find when creating
  a small self-contained example that you actually understand the problem better and solve it yourself before getting
  round to posting it on a forum. This is a form of [[https://rubberduckdebugging.com/][Rubber Duck Debugging â€“ Debugging software with a rubber ducky]] and
  is quite satisfying.
+ Remember what is urgent for you won't be for those you are asking to spend their free time helping you for no benefit
  to them whatsoever (i.e. its often their free time).
+ In the same vein if you're asked for more information or to provide an example clarifying your problem take the time
  to do so.
+ Keep conversations open. People are helping for free and the information should remain visible to anyone else who is
  searching for assistance in the future. Don't message people privately asking for help.

** R User Groups
:PROPERTIES:
:ID:       d76ffaee-8e40-4d36-a901-80401a4cc836
:mtime:    20221228150524 20230103103308
:ctime:    20221228150524 20230103103308
:END:

There are a lot of R user groups and there is no single definitive list, below are links to some.

+ [[https://benubah.github.io/r-community-explorer/rugs.html][R Community Explorer]] a Shiny Dashboard which is regularly updated, probably your best first port of call when looking
  for an R user group.
+ [[https://www.meetup.com/pro/r-user-groups/][R User Groups - Meetup]]
+ [[https://jumpingrivers.github.io/meetingsR/r-user-groups.html][R User Groups]] curated by

* Development
:PROPERTIES:
:ID:       61a19339-e706-4f93-b98c-f5b336d0f280
:mtime:    20230919175554 20230706002432 20230704213853 20230506201917 20230103103309 20221228150524
:ctime:    20221228150524
:END:
At some point you may want to delve further into writing more structured code in R and write your own package. This can
be a good way of organising your work and making it reproducible and available to others, but for this to be effective
there are some principles which should be followed and thanks to the work of others there are many tools available to
help with that. An excellent resource is the [[https://r-pkgs.org/][R Packages book by Hadley Wickham and Jenny Bryan]], I've made my notes
under [[id:f8e9d58f-e729-483a-b008-489cd30f0f6a][R Packages]].


* ~renv~
:PROPERTIES:
:ID:       9396fd39-d62f-4359-8101-49423d449cb5
:mtime:    20231222005051 20231205220407 20231023104105 20231023070045
:ctime:    20231023070045
:END:

Reproducible environments in R can be achieved using the [[https://rstudio.github.io/renv/articles/renv.html][renv]] package. In a project directory you should have an R
session running and have loaded all necessary packages. You can then initialise ~renv~ using

#+begin_src R
renv::init()
#+end_src

This makes a snapshot of your current R packages and writes it to ~renv.lock~ in addition it adds a ~.Rprofile~ which
calls the ~renv/activate.R~ script which means on starting R within the project directory again the ~renv~ is
reactivated, if this is on a new system then ~renv::restore()~ will be run to download and install all packages.

If you add a new package to your requirements you may want to install it, on your system this can be done globally, but
you can also install it within the project directory with ~renv::install()~ and the package will be installed under the
~renv/~ directory. After doing so you should ~renv::snapshot()~ your environment to ensure the new package requirement
is added to the ~renv.lock~ file. If you find this isn't working then you can run the [[https://github.com/rstudio/renv/issues/435#issuecomment-632268374][following]] which should force it to
be added.

#+begin_src R
  renv::settings$snapshot.type("all")
  renv::snapshot()
#+end_src

* Links

** Books
:PROPERTIES:
:ID:       3c8ec7de-ab7e-40cd-9c7e-58d3ed0a81bb
:
:ctime:    20230423231605
:END:

A good compendium of available books is provided by the [[https://www.bigbookofr.com/][Big Book of R]], here I list a select few that I like and have
found useful.

*** Data Science

+ [[https://r4ds.had.co.nz/][R for Data Science]]
+ [[https://bookdown.org/rdpeng/rprogdatascience/][R Programming for Data Science]]
+ [[https://e2e-ds-r.franckess.com/][End To End Data Science With R]]


*** Graphics

+ [[https://ggplot2-book.org/index.html][ggplot2]]
+ [[https://r-graphics.org/][R Graphics Cookbook, 2nd edition]]
+ [[https://cedricscherer.netlify.app/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/][A ggplot2 Tutorial for Beautiful Plotting in R - CÃ©dric Scherer]]
+ [[https://bbc.github.io/rcookbook/][BBC Visual and Data Journalism cookbook for R graphics]]

*** Statistics

+ [[http://appliedpredictivemodeling.com/][Applied Predictive Modeling]] most focused on [[https://topepo.github.io/caret/index.html][The caret Package]] (but see also [[https://www.tmwr.org/][Tidy Modeling with R]] and the next book).
+ [[https://aml4td.org/][Applied Machine Learning for Tabular Data]]
+ [[https://www.statlearning.com/][An Introduction to Statistical Learning with Applications in R]] (also available for Python)
+ [[https://openforecast.org/adam/index.html][Time Series Analysis and Forecasting with ADAM]]
+ [[https://www.modernstatisticswithr.com/][Modern Statistics with R]]
+ [[https://learningstatisticswithr.com/][Learning Statistics with R]] by Danielle Navarro

**** Bayesian

+ [[https://www.bayesrulesbook.com/][Bayes Rules! An Introduction to Applied Bayesian Modeling]]
+ [[https://bookdown.org/content/70a06054-8138-4d90-aaa0-895f57aab1b4/][Statistical rethinking with brms, ggplot2, and the tidyverse: Second edition]]

**** Machine Learning

+ [[https://bradleyboehmke.github.io/HOML/][Hands-On Machine Learning with R]]
+ [[https://betaandbit.github.io/RML/][The Hitchikers Guide to Responsible Machine Learning]]

**** Neural Nets

+ [[https://skeydan.github.io/Deep-Learning-and-Scientific-Computing-with-R-torch/][Deep Learning and Scientific Computing with R torch]]

*** Health Data

+ [[https://epirhandbook.com/en/][The Epidemiologist R Handbook : R for applied epidemiology and public health]]
+ [[http://hbiostat.org/rflow/][R Workflow for Reproducible Biomedical Research Using Quarto]]
+ [[https://argoshare.is.ed.ac.uk/healthyr_book/][R for Health Data Science]]
+ [[https://raps-with-r.dev/][Building reproducible analytical pipelines with R]]
+ [[https://book.declaredesign.org/][Research Design in the Social Sciences]]

*** GIS

+ [[https://geocompr.robinlovelace.net/][Geocomputation with R]]
+ [[https://bookdown.org/michael_bcalles/gis-crash-course-in-r/][A Crash Course in Geographic Information Systems (GIS) using R]]
+ [[https://ipeagit.github.io/intro_access_book/][Introduction to urban accessibility]]

*** Reproducibility

+ [[https://www.tmwr.org/][Tidy Modeling with R]]
+ [[https://tellingstorieswithdata.com/][Telling Stories with Data]]

*** Miscellaneous

+ [[https://rstudio-education.github.io/hopr/][Hands-On Programming with R]]
+ [[https://skeydan.github.io/Deep-Learning-and-Scientific-Computing-with-R-torch/][Deep Learning and Scientific Computing with R torch]]
+ [[https://rstats.wtf/][What They Forgot to Teach You About R]]
+ [[https://www.tidy-finance.org/r/index.html][Tidy Finance with R]] (see also [[https://www.tidy-finance.org/][Welcome to Tidy Finance]])

*** Advanced

+ [[https://r-pkgs.org/][R Packages]]
+ [[https://deepr.gagolewski.com/index.html][Deep R Programming]]
+ [[https://design.tidyverse.org/][Tidy Design Patterns]]
  
** Learning Resources

+ [[https://www.stephaniehicks.com/jhustatcomputing2022/schedule][Statistical Computing]]
+ [[https://healthyr.surgicalinformatics.org/index.html#top][HealthyR]]

** HowTos

+ [[https://www.tidyverse.org/blog/2019/09/callr-task-q/][Multi Process Task Queue in 100 Lines of R Code]]

*** Labels

+ [[https://www.pipinghotdata.com/posts/2022-09-13-the-case-for-variable-labels-in-r/][PIPING HOT DATA: The case for variable labels in R]]
*** Videos

+ [[https://www.youtube.com/@brodriguesco/videos][brodriguesco on YouTube]] - lots of useful tips and tricks.
+ [[https://www.youtube.com/watch?v=hpudxAmxHSM][Tuning XGBoost using tidymodels - Julia Silge]]
+ [[https://www.rscreencasts.com/][R Screencasts]]

** Packages and Documentation

+ [[https://r-universe.dev/search/][ROpenSci : R-universe]]
+ [[https://www.rdocumentation.org/][RDocumentation]]
+ [[https://rdrr.io/][R Package Documentation]]

*** Genetics

+ [[https://www.slendr.net/][A Simulation Framework for Spatiotemporal Population Genetics â€¢ slendr]]

** ROpenSci

+ [[https://docs.ropensci.org/occCite/][Querying and Managing Large Biodiversity Occurrence Datasets â€¢ occCite]]
+ [[https://docs.ropensci.org/osmextract/][Download and Import Open Street Map Data Extracts â€¢ osmextract]]
+ [[https://docs.ropensci.org/jqr/][Client for jq, a JSON Processor â€¢ jqr]]

** Blogs

+ [[https://sebkrantz.github.io/Rblog/2023/04/12/collapse-and-the-fastverse-reflecting-the-past-present-and-future/][collapse and the fastverse: Reflections on the Past, Present and Future - With Examples from Geospatial Data Science - R, Econometrics, High Performance]]
+ [[https://www.mm218.dev/posts/2023-11-07-classed-errors/][Mike Mahoney - Classed conditions from rlang functions]]
+ [[https://yabellini.netlify.app/blog/2024_learningtocode/][Learning Programming in 30 lessons | Yanina Bellini Saibene]]
  
