:PROPERTIES:
:ID:       cbdb0c03-0eeb-45f0-a4c7-91131519120e
:mtime:    20240130204013
:ctime:    20240130204013
:END:
#+TITLE: Git Bisect
#+FILETAGS: :git:versioncontrol:debugging:


[[https://git-scm.com/docs/git-bisect][git bisect]] is a useful tool for debugging where an error has been introduced into a pipeline. It requires a starting
commit where code worked, and an end commit where it does.  A useful article is [[https://www.git-tower.com/learn/git/faq/git-bisect/][Using "git bisect" to Quickly Find Bugs]]
and this serves as a template for the following examples.

#+begin_src sh
  git bisect start
  git bisect bad HEAD
  git bisect good <hash>
#+end_src

Git will then automatically checkout the revisions in the middle of this range and we have to run our tests or builds to
check if things work, marking the commit as ~git bisect good~ or ~git bisect bad~. Git then repeats this process
splitting the commit range again. This is repeated until a bad commit is found and we have our problem.

On completion ~git bisect reset~ restores ~HEAD~.

This can be done in [[id:220d7ba9-d30e-4149-a25b-03796e098b0d][Magit]] of course!
