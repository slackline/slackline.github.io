:PROPERTIES:
:ID:       220d7ba9-d30e-4149-a25b-03796e098b0d
:mtime:    20230331095952 20230329110200 20230222123344 20230103103309 20221228103404 20230103103308
:ctime:    20221228103404 20230103103308
:END:
#+TITLE: Magit
#+DATE: [2022-12-09 Fri 21:28]
#+FILETAGS: :emacs:magit:git:github:gitlab:

Magit is a porcelain for [[id:3c905838-8de4-4bb6-9171-98c1332456be][Git]]. This means its a container and simply provides access to all the functionality of Git but
from directly within Emacs via a series of easy to use [[id:d6626ec2-1e95-4d42-b06e-ae45268f2b58][emacs_transient]]
* Forge

You can interact with forges such as [[https://gitlab.com][GitLab]], [[https://github.com][GitHub]] and so forth although support is limited beyond these main two.

* Configuration

My configuration of Magit is below.

#+INCLUDE: "~/.config/emacs/settings/magit-settings.el" example emacs-lisp

** Forge

You can configure Magit to work with forges such as [[id:52b4db29-ba21-4a8a-9b83-6e9a8dc02f41][GitHub]] and [[id:7cbd61f2-d6a5-4e67-af72-2a13a5e86faa][GitLab]] using the [[https://magit.vc/manual/forge.html][Forge]] package. Its a little tricky to
setup but you should read the [[https://magit.vc/manual/forge.html#Getting-Started][Getting Started]] instructions and if it doesn't work first time persevere and try again.

* Usage

** Branching

** Rebasing
:PROPERTIES:
:mtime:    20230331100004
:ctime:    20230331100004
:END:

Rebasing is a contentious issue for some, the reason for this is that it is rewriting Git commit history, which some
consider poor practice. There are good reasons for doing so though, for example if you made a branch (~my_feature~) to
develop a feature and ~master~ had changes merged from another branch (~someone_elses_feature~) before you had finished
your work then you should ideally merge those changes (i.e. ~master~) into your branch (~my_feature~) before you attempt
to merge your branch (~my_feature~) into ~master~. You can do this via merging ~origin master~ into ~my_feature~ but
then you inherit all of the commits from ~someone_elses_feature~. An alternative is to use ~git rebase~ and squash the
commits into a single ~bringing branch up-to-date with master~ commit.

Rebasing in Magit is super easy, for a simple walk-through see [[https://chainsawriot.com/postmannheim/2022/12/12/aoe12.html][here]] or these very clear blog posts at  [[https://www.lvguowei.me/post/magit-rebase/][Magit tutorial -
Rebase (Part I)]] and [[https://www.lvguowei.me/post/magit-rebase-2/][Magit tutorial - Rebase (Part II)]].


** Bisecting

[[id:323647af-4d22-4b24-9763-320da9a1d76d][Bisecting]] can be done in Magit, see [[id:ebb1b921-f075-47ba-a21f-90666b6acfec][Magit Bisect]].

* Forge
:PROPERTIES:
:ID:       052e079f-d42b-4e19-adff-811335a2c852
:mtime:    20230103103308 20221228103404
:ctime:    20221228103404
:END:

Once you've setup and configured Forge you can pull all issues and pull requests with ~M-x forge-pull~ or from a ~magit~
buffer use ~f n~. You can then create issues when the cursor is on the "~Issues~" section with ~N c i~ or similarly pull
requests (~N c p~). You can comment and edit existing topics, whether that is Issues or Pull Requests by hitting
~Return~ to view it and ~C-c C-e~ to edit a given section when the cursor is over that section.

* Links

+ [[https://magit.vc/][It's Magit! A Git Porcelain inside Emacs]]

** Repositories

+ [[https://github.com/magit/magit][magit/magit: It's Magit! A Git porcelain inside Emacs.]]
+ [[https://github.com/magit/ghub][magit/ghub: Client libraries for the APIs of various Git forges]]
+ [[https://github.com/magit/forge][magit/forge: Work with Git forges from the comfort of Magit]]

** HowTos

+ [[https://chainsawriot.com/postmannheim/2022/12/12/aoe12.html][Advent of emacs #12: How I do version control in emacs]]
+ [[https://tsdh.org/posts/2022-08-01-difftastic-diffing-with-magit.html][Difftastic diffing with Magit]] (see also [[https://shivjm.blog/better-magit-diffs/][Better Magit Diffs â€• A Place For My Head]] for tweaking colours)

** Rebasing
