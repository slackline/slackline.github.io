:PROPERTIES:
:ID:       ba01e998-be25-43d4-81f0-ff4228c252ea
:mtime:    20250119221712 20241223214926
:ctime:    20241223214926
:END:
#+TITLE: Wireguard
#+FILETAGS: :linux:vpn:wireguard:

Wireguard is an in-kernel VPN system that his fast and simple to setup and configure.

* Installation

** Gentoo

#+begin_src
emerge -av wireguard-tools
#+end_src

** Arch

#+begin_src
pacman -Syu wireguard-tools
#+end_src

** NixOS

#+begin_src
{
  boot = {
    extraModulePackages = [ config.boot.kernelPackages.wireguard ];  # I don't think this is essential though
  }; # end boot
  ...
  environmentSystemPackages = with pkgs; {
    ...
    wireguard-tools
  }; # end environmentSystemPackages
}
#+end_src

* Server

** Key Generation

Generate your **first** key pair with the following which will also create the servers ~private~ key.

#+begin_src
# In two steps
(umask 077 && wg genkey > server-private.key)
(umask 077 && wg pubkey < server-private.key > client1-public.key)
# All in one
(umask 077 && wg genkey | tee server-private.key | wg pubkey > client1-public.key)
# Preshared key
(umask 077 && wg genpsk > client1-preshared.key)
#+end_src

You should have three files now...

+ ~server-private.key~ - the servers private key, keep this secret!
+ ~client1-public.key~ - the public key for ~client1~
+ ~client1-preshared.key~ - the preshared key for ~client1~

*** Keys for more Clients

When adding subsequent clients you need to reuse the private key which is stored in ~/etc/wireguard/wg0.conf~ so instead
use the following which pulls the private key out of that file.

#+begin_src
(umask 077 && grep 'PrivateKey = ' /etc/wireguard/wg0.conf | tail -n 1 | sed -e 's/.* = //g' | wg pubkey > client2-public.key)
(umask 077 && wg genpsk > client2-preshared.key)
#+end_src


** Configuration

Configure a device, in this instance ~wg0~ by creating ~/etc/wireguard/wg0.conf~ as follows, note that you can't yet add
the ~PublicKey~ under ~[Peer]~ as it hasn't been generated. Replace ~<server-private.key>~ with the private key you have just
generated. You will generate ~client1-public.key~ and ~client1-preshared.key~ on the client you wish to connect and
replace those values.

#+begin_src
[Interface]
Address = 10.200.200.1/24
ListenPort = 46879
PrivateKey = <server-private.key>
DNS = 1.1.1.1

# note - substitute eth0 in the following lines to match the Internet-facing interface
# if the server is behind a router and receive traffic via NAT, this iptables rules are not needed
PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

[Peer] #
PublicKey = <client1-public.key>   # Generated in the steps below
PresharedKey = <client1-preshared.key>
AllowedIPs = 10.200.200.2/32
#+end_src

* Client

The process for generating keys on the client is virtually identical, although you don't need to generate a pre-shared
key as these should be the identical on both the server and client.

** Linux

#+begin_src
(umask 077 && wg genkey | tee private.key | wg pubkey > public.key)
#+end_src

*** Configuration

Create a ~/etc/wireguard/wg0.conf~ and populate it with the ~private.key~ you have just created on the client and the
~client1-public.key~ and ~client1-preshared.key~ you created on the server.

#+begin_src
[Interface]
Address = 10.200.200.12/32
PrivateKey = <private.key>
DNS = 1.1.1.1

[Peer]
PublicKey = <client1-public.key>
PresharedKey = <client1-preshared.key>
AllowedIPs = 0.0.0.0/0, ::/0
Endpoint = 152.228.170.148:51820
PersistentKeepalive = 25
#+end_src

Now that you have generated a ~public.key~ on the client you can add it to the ~PublicKey~ under the ~Peer~ section of
the ~/etc/wireguard/wg0.conf~ on the server.


*** NixOS

If using [[id:69291a6b-c253-44bc-ad9d-8d899bb90529][NixOS]] you need to encrypt your clients private key and the pre-shared key so that they are not inadvertently
shared. I've opted to use [[id:c345f901-5a1f-4868-b8bf-bc352554ee58][~agenix~]] which uses SSH keys to encrypt files/information. See [[id:017ac43b-f73e-4422-8b32-5277a0aabf7b][NixOS - Security | Agenix]] for
details of how to do this.

** Android

Install the excellent [[https://download.wireguard.com/android-client/][Wireguard Android]] application.

* Links

+ [[https://www.wireguard.com/][WireGuard: fast, modern, secure VPN tunnel]]

** Guides

+ [[https://bash-prompt.net/guides/wireguard-setup/][Quickly Create a WireGuard Server and Clients]]
