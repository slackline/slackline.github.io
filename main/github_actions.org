:PROPERTIES:
:ID:       e19b6eb6-46b2-440a-ba35-be29feb33407
:mtime:    20250602185038 20250528075937 20241011150440 20241001110834 20240905150013 20240221074022 20240128232536 20240127115829 20231015151623 20230318204943 20230103103313 20221216215027
:ctime:    20221216215027
:END:
#+TITLE: GitHub Actions
#+DATE: [2022-12-14 Wed 13:42]
#+FILETAGS: :git:github:actions:github actions:

GitHub Actions allow you to perform Continuous Integration (CI)/Continuous Development (CD) actions, triggering certain
workflows and events based on pushes, commits, pulls, approvals and merges.

+ [[id:cd090ada-cd74-4402-8d89-0fbfe13be6dd][Sphinx Documentation]]
+ [[id:fdc25464-121c-41bd-b6fc-cc5fb3229122][Debugging]]


* Environment Variables

[[https://docs.github.com/en/github-ae@latest/actions/learn-github-actions/environment-variables#default-environment-variables][GitHub Actions environment variables]] make some variables available automatically. I had recourse to require the user and
the repository separetly and spent some time scratching my head how to do this until I came across [[https://www.cazzulino.com/github-actions-repository.html][this short post]] that
uses [[id:9c6257dc-cbef-4291-8369-b3dc6c173cf2][Bash]] parameter expansion.

* Debugging with tmate

[[https://tmate.io/][tmate]] is a fork of [[id:b9f12c22-08db-46c1-a4fa-5ab9ee1a734c][Tmux]] and has been used in a very handy GitHub Action [[https://github.com/mxschmitt/action-tmate][action-tmate]] ([[https://mxschmitt.github.io/action-tmate/][Debug your GitHub Actions by using
tmate]]). This allows you to add a section to your GitHub Action that on failure of an existing job will start a ~tmate~
session on the runner, keeping it alive for a specified amount of time to allow you to [[id:ae1e9b97-feb0-4f1a-b804-b89edaf5a790][SSH]] in to the machine and debug
why the test has failed.

There are quite a few options available to the action but the first thing you should do is ensure that you have a public
SSH key on your GitHub profile. This should be the case as GitHub disabled working with ~https~ if you want to push
anything to GitHub.


* Publishing to PyPI

It is possible to use a GitHub Action to automate [[id:83206ac1-1108-4151-ad24-f3654b650dd6][publishing to PyPI from GitHub]].

* Tips and Tricks

** Speed up Pip Installs

You can cache virtual environments and in turn speed up setting up virtual environments by using [[https://github.com/syphar/restore-virtualenv][restore-virtualenv]]. See
[[https://testmon.org/blog/better-github-actions-caching/][How to make your GitHub Actions build quicker?]]

* Links

** Actions

+ [[https://github.blog/changelog/2021-11-23-github-actions-setup-python-now-supports-dependency-caching/][Python Dependency Caching]]
+ [[https://github.com/marketplace/actions/zenodo-upload][Zenodo Upload]]
+ [[https://github.com/caltechlibrary/baler][caltechlibrary/baler]]
+ [[https://github.com/DavidAnson/markdownlint-cli2][DavidAnson/markdownlint-cli2]]
+ [[https://github.com/marketplace/actions/publish-org-roam-ui][Publish Org-Roam UI]] publish your org-roam UI pages on GitHub from a repository, very neat.
+ [[https://github.com/lowlighter/metrics][Metrics]] generate SVG files summarising metrics on your account, very neat.
+ [[https://github.com/marketplace/actions/debugging-with-tmate][Debugging with tmate · Actions · GitHub Marketplace]]
