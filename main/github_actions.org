:PROPERTIES:
:ID:       e19b6eb6-46b2-440a-ba35-be29feb33407
:mtime:    20241011150440 20241001110834 20240905150013 20240221074022 20240128232536 20240127115829 20231015151623 20230318204943 20230103103313 20221216215027
:ctime:    20221216215027
:END:
#+TITLE: GitHub Actions
#+DATE: [2022-12-14 Wed 13:42]
#+FILETAGS: :git:github:actions:github actions:

GitHub Actions allow you to perform Continuous Integration (CI)/Continuous Development (CD) actions, triggering certain
workflows and events based on pushes, commits, pulls, approvals and merges.

* Building Sphinx Documentation

A useful action if you have a Python project with documentation built and configured using [[https://www.sphinx-doc.org/][Sphinx]] is to have the
documentation built automatically by GitHub. An action for this is provided by [[https://github.com/marketplace/actions/sphinx-docs-to-github-pages][action-sphinx-docs-to-gh-pages]]. Save this
to your ~.github/workflows/~ directory (you can call it what you like but as always something descriptive is useful
e.g. ~sphinx_docx_to_gh_pages.yaml~). You will also need to create a ~devtools/conda-env/docs_env.yml~ file which
defines the Conda repository that is to be used for installing various Sphinx packages you are using. I found
~conda-forge~ didn't include all the packages I required and so I modified the ~run:~ section of the main YAML
configuration to install all required packages directly from PyPi using ~pip~.  When first setting things up you will
want to set the ~branch:~ in the main YAML configuration to reflect that on which you are doing the development so the
action is triggered on the branch and you can view the results. Stage, commit and push the two files and you should be
able to find the build being made by going to the commits page on the branch you are working on, initially there is a
yellow dot next to the commit you've just pushed which you can click on to see the actions being run.

When complete this creates a new branch called ~gh-pages~ which contains all of the HTML documentation that has been
created by Sphinx. You now need to configure your repository to use [[https://pages.github.com/][GitHub Pages]]. Go to ~Settings > Pages~ and select
the ~gh-pages~ branch and select the ~root~ directory and then ~Save~. You will get a link to the pages appear just
above these options. You can click on this and it may take a little while to build the pages but the will appear.

* Environment Variables

[[https://docs.github.com/en/github-ae@latest/actions/learn-github-actions/environment-variables#default-environment-variables][GitHub Actions environment variables]] make some variables available automatically. I had recourse to require the user and
the repository separetly and spent some time scratching my head how to do this until I came across [[https://www.cazzulino.com/github-actions-repository.html][this short post]] that
uses [[id:9c6257dc-cbef-4291-8369-b3dc6c173cf2][Bash]] parameter expansion.

* Publishing to PyPI

It is possible to use a GitHub Action to automate [[id:5e1f167e-5c0c-4206-b2ac-6694e08524d8][publishing to PyPI from GitHub]].

* Tips and Tricks

** Speed up Pip Installs

You can cache virtual environments and in turn speed up setting up virtual environments by using [[https://github.com/syphar/restore-virtualenv][restore-virtualenv]]. See
[[https://testmon.org/blog/better-github-actions-caching/][How to make your GitHub Actions build quicker?]]

* Links

** Actions

+ [[https://github.blog/changelog/2021-11-23-github-actions-setup-python-now-supports-dependency-caching/][Python Dependency Caching]]
+ [[https://github.com/marketplace/actions/zenodo-upload][Zenodo Upload]]
+ [[https://github.com/caltechlibrary/baler][caltechlibrary/baler]]
+ [[https://github.com/DavidAnson/markdownlint-cli2][DavidAnson/markdownlint-cli2]]
+ [[https://github.com/marketplace/actions/publish-org-roam-ui][Publish Org-Roam UI]] publish your org-roam UI pages on GitHub from a repository, very neat.
+ [[https://github.com/lowlighter/metrics][Metrics]] generate SVG files summarising metrics on your account, very neat.
+ [[https://github.com/marketplace/actions/debugging-with-tmate][Debugging with tmate · Actions · GitHub Marketplace]]
