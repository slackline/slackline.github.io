Worktree
:PROPERTIES:
:ID:       ad99d902-5005-481e-95d2-e91ba0dcc859
:mtime:    20230103103314 20230102213516
:ctime:    20230102213516
:END:
#+TITLE: Git Worktree
#+DATE: <2023-01-03 Tue 15:07>
#+FILETAGS: git:worktree:branching:

Worktrees provide a method of working on multiple branches simultaneously and avoid the need to use ~git stash~ before
switching.

* Clone a bare repository

If you don't explicitly include a ~repository_name~ when cloning with the ~--bare~ option then the resulting directory
to which the clone is made carries the ~.git~ suffix. There isn't much in this repository, its pretty much the contents
of the ~.git~ directory with the configuration, ~objects~ and so forth

#+begin_example sh
  git clone --bare <repository_url> <repository_name>
  cd <repository_name>
  ls -lha
  drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:47:20 2023  .
  drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:47:41 2023  ..
  .rw-r--r-- neil neil 128 B  Tue Jan  3 14:44:29 2023  config
  .rw-r--r-- neil neil  73 B  Tue Jan  3 14:44:27 2023  description
  .rw-r--r-- neil neil  21 B  Tue Jan  3 14:47:20 2023  HEAD
  drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:44:27 2023  hooks
  drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:44:27 2023  info
  drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:44:27 2023  objects
  .rw-r--r-- neil neil 2.9 KB Tue Jan  3 14:47:20 2023  packed-refs
  drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:44:27 2023  refs
#+end_example

* Create the ~main~ worktree

First thing is to create a worktree for the ~main~ branch, once created you will see there is now a ~main~ directory
present...

#+begin_example sh
  git worktree add main
  ls -lha
   l
   drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:55:32 2023  .
   drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:47:41 2023  ..
   .rw-r--r-- neil neil 128 B  Tue Jan  3 14:44:29 2023  config
   .rw-r--r-- neil neil  73 B  Tue Jan  3 14:44:27 2023  description
   .rw-r--r-- neil neil  21 B  Tue Jan  3 14:47:20 2023  HEAD
   drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:44:27 2023  hooks
   drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:44:27 2023  info
   drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:55:33 2023  main           # Newly created worktree directory
   drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:44:27 2023  objects
   .rw-r--r-- neil neil 2.9 KB Tue Jan  3 14:47:20 2023  packed-refs
   drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:44:27 2023  refs
   drwxr-xr-x neil neil 4.0 KB Tue Jan  3 14:55:32 2023  worktrees
#+end_example

* Create a new worktree on a new branch

A new worktree with a new branch is created by including the ~-b <branch_name>~ option. Here I call the wortree the same
name as the branch. Once you've made changes to your branch and are ready to push them you will want to set the upstream
branch using the ~--set-upstream~

#+begin_example sh
  git worktree add -b 208-new-feature 208-new-feature
  cd 208-new-feature
  git add README.md
  git commit -m "Updated the README with contact details"
  git push --set-upstream origin 208-new-feature
#+end_example

* Create a Worktree based on remote branches
   
Sometimes you will want to add a worktree based on a remote branch if for example there is a pull request that you have
been asked to review.

#+begin_example sh
  git fetch
  git worktree add <worktree-name> <branch-name>
#+end_example



* Links

+ [[https://www.gitkraken.com/learn/git/git-worktree][How to Use Git Worktree | Add, List, Remove]]
+ [[https://dev.to/yankee/practical-guide-to-git-worktree-58o0][Practical Guide to Git Worktree - DEV Community]]
+ [[https://medium.com/ngconf/git-worktrees-in-use-f4e516512feb][Git Worktrees in Use. Most of us use Git every day, but… | by Preston Lamb]] << This seems good, clearest so far.
+ [[https://git-scm.com/docs/git-worktree][Git - git-worktree Documentation]]
